// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/s12chung/go_homepage/go/app (interfaces: Setter)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	app "github.com/s12chung/go_homepage/go/app"
	router "github.com/s12chung/go_homepage/go/lib/router"
	reflect "reflect"
)

// MockSetter is a mock of Setter interface
type MockSetter struct {
	ctrl     *gomock.Controller
	recorder *MockSetterMockRecorder
}

// MockSetterMockRecorder is the mock recorder for MockSetter
type MockSetterMockRecorder struct {
	mock *MockSetter
}

// NewMockSetter creates a new mock instance
func NewMockSetter(ctrl *gomock.Controller) *MockSetter {
	mock := &MockSetter{ctrl: ctrl}
	mock.recorder = &MockSetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSetter) EXPECT() *MockSetterMockRecorder {
	return m.recorder
}

// AssetsUrl mocks base method
func (m *MockSetter) AssetsUrl() string {
	ret := m.ctrl.Call(m, "AssetsUrl")
	ret0, _ := ret[0].(string)
	return ret0
}

// AssetsUrl indicates an expected call of AssetsUrl
func (mr *MockSetterMockRecorder) AssetsUrl() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AssetsUrl", reflect.TypeOf((*MockSetter)(nil).AssetsUrl))
}

// GeneratedAssetsPath mocks base method
func (m *MockSetter) GeneratedAssetsPath() string {
	ret := m.ctrl.Call(m, "GeneratedAssetsPath")
	ret0, _ := ret[0].(string)
	return ret0
}

// GeneratedAssetsPath indicates an expected call of GeneratedAssetsPath
func (mr *MockSetterMockRecorder) GeneratedAssetsPath() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GeneratedAssetsPath", reflect.TypeOf((*MockSetter)(nil).GeneratedAssetsPath))
}

// SetRoutes mocks base method
func (m *MockSetter) SetRoutes(arg0 router.Router, arg1 *app.Tracker) {
	m.ctrl.Call(m, "SetRoutes", arg0, arg1)
}

// SetRoutes indicates an expected call of SetRoutes
func (mr *MockSetterMockRecorder) SetRoutes(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetRoutes", reflect.TypeOf((*MockSetter)(nil).SetRoutes), arg0, arg1)
}

// WildcardUrls mocks base method
func (m *MockSetter) WildcardUrls() ([]string, error) {
	ret := m.ctrl.Call(m, "WildcardUrls")
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// WildcardUrls indicates an expected call of WildcardUrls
func (mr *MockSetterMockRecorder) WildcardUrls() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WildcardUrls", reflect.TypeOf((*MockSetter)(nil).WildcardUrls))
}
